services:
  model1:
    build:
      context: .
      dockerfile: model.Dockerfile
    ports:
      - "8001:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    volumes:
      - ./model1:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://model1:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  model2:
    build:
      context: .
      dockerfile: model.Dockerfile
    ports:
      - "8002:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=db
      - POSTGRES_DB=iris_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PYTHONUNBUFFERED=1
    depends_on:
      - rabbitmq
      - db
    volumes:
      - ./model2:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://model2:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"  # Management UI
      - "5672:5672"    # Default RabbitMQ port
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: iris_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d iris_db"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
